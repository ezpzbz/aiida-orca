name: ci

on: [push, pull_request]

jobs:

    pre-commit:

        runs-on: ubuntu-latest

        steps:
        -   uses: actions/checkout@v2

        -   name: Cache Python dependencies
            uses: actions/cache@v1
            with:
                path: ~/.cache/pip
                key: pip-pre-commit-${{ hashFiles('**/setup.json') }}
                restore-keys:
                    pip-pre-commit-

        -   name: Set up Python
            uses: actions/setup-python@v2
            with:
                python-version: '3.10'

        -   name: Install Python dependencies
            run: pip install -e .[pre-commit,test]

        -   name: Run pre-commit
            run: pre-commit run --all-files || ( git status --short ; git diff ; exit 1 )

    tests:

        runs-on: ubuntu-latest
        timeout-minutes: 10

        strategy:
            fail-fast: false
            matrix:
                versions: [
                    {'python': '3.8', 'aiida-core': '1.6'},
                    {'python': '3.8', 'aiida-core': '2.0'},
                    {'python': '3.9', 'aiida-core': '2.0'},
                    {'python': '3.10', 'aiida-core': '2.2.1'},
                ]

        services:
            postgres:
                image: postgres:12
            rabbitmq:
                image: rabbitmq:latest
                ports:
                -   5672:5672

        steps:
        -   uses: actions/checkout@v2

        -   name: Cache Python dependencies
            uses: actions/cache@v1
            with:
                path: ~/.cache/pip
                key: pip-${{ matrix.versions.python }}-tests-${{ hashFiles('**/setup.json') }}
                restore-keys:
                    pip-${{ matrix.versions.python }}-tests

        -   name: Set up Python ${{ matrix.versions.python }}
            uses: actions/setup-python@v2
            with:
                python-version: ${{ matrix.versions.python }}

        -   name: Install Python dependencies
            run: pip install -e .[test]

        -   name: Install aiida-core ${{ matrix.versions.aiida-core }}
            run: pip install aiida-core~=${{ matrix.versions.aiida-core }}

        -   name: Reentry scan
            if: ${{ startsWith(matrix.versions.aiida-core, '1.6') }}
            run: reentry scan

        -   name: Run pytest
            env:
                AIIDA_WARN_v3: True
            run: pytest -sv tests
